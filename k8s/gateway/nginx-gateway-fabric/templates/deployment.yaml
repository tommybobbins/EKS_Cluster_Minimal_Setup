{{- if eq .Values.nginxGateway.kind "deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-gateway.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "nginx-gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nginxGateway.replicaCount }}
  selector:
    matchLabels:
    {{- include "nginx-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "nginx-gateway.selectorLabels" . | nindent 8 }}
      {{- if or .Values.nginxGateway.podAnnotations .Values.metrics.enable }}
      annotations:
        {{- if .Values.nginxGateway.podAnnotations }}
        {{- toYaml .Values.nginxGateway.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.metrics.enable }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.port }}"
        {{- if .Values.metrics.secure }}
        prometheus.io/scheme: "https"
        {{- end }}
        {{- end }}
      {{- end }}
    spec:
      containers:
      - args:
        - static-mode
        - --gateway-ctlr-name={{ .Values.nginxGateway.gatewayControllerName }}
        - --gatewayclass={{ .Values.nginxGateway.gatewayClassName }}
        - --config={{ include "nginx-gateway.config-name" . }}
        - --service={{ include "nginx-gateway.fullname" . }}
        {{- if .Values.nginx.plus }}
        - --nginx-plus
        {{- end }}
        {{- if .Values.metrics.enable }}
        - --metrics-port={{ .Values.metrics.port }}
        {{- if .Values.metrics.secure  }}
        - --metrics-secure-serving
        {{- end }}
        {{- else }}
        - --metrics-disable
        {{- end }}
        {{- if .Values.nginxGateway.readinessProbe.enable }}
        - --health-port={{ .Values.nginxGateway.readinessProbe.port }}
        {{- else }}
        - --health-disable
        {{- end }}
        {{- if .Values.nginxGateway.leaderElection.enable }}
        - --leader-election-lock-name={{ include "nginx-gateway.leaderElectionName" . }}
        {{- else }}
        - --leader-election-disable
        {{- end }}
        {{- if not .Values.nginxGateway.productTelemetry.enable }}
        - --product-telemetry-disable
        {{- end }}
        {{- if .Values.nginxGateway.gwAPIExperimentalFeatures.enable }}
        - --gateway-api-experimental-features
        {{- end }}
        {{- if .Values.nginx.usage.secretName }}
        - --usage-report-secret={{ .Values.nginx.usage.secretName }}
        {{- end }}
        {{- if .Values.nginx.usage.serverURL }}
        - --usage-report-server-url={{ .Values.nginx.usage.serverURL }}
        {{- end }}
        {{- if .Values.nginx.usage.clusterName }}
        - --usage-report-cluster-name={{ .Values.nginx.usage.clusterName }}
        {{- end }}
        {{- if .Values.nginx.usage.insecureSkipVerify }}
        - --usage-report-skip-verify
        {{- end }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ .Values.nginxGateway.image.repository }}:{{ default .Chart.AppVersion .Values.nginxGateway.image.tag }}
        imagePullPolicy: {{ .Values.nginxGateway.image.pullPolicy }}
        name: nginx-gateway
        {{- if .Values.nginxGateway.lifecycle }}
        lifecycle:
        {{- toYaml .Values.nginxGateway.lifecycle | nindent 10 }}
        {{- end }}
        {{- if .Values.nginxGateway.resources }}
        resources:
        {{- toYaml .Values.nginxGateway.resources | nindent 10 }}
        {{- end }}
        ports:
        {{- if .Values.metrics.enable }}
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
        {{- end }}
        {{- if .Values.nginxGateway.readinessProbe.enable }}
        - name: health
          containerPort: {{ .Values.nginxGateway.readinessProbe.port }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: {{ .Values.nginxGateway.readinessProbe.initialDelaySeconds }}
          periodSeconds: 1
        {{- end }}
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: {{ .Values.nginxGateway.securityContext.allowPrivilegeEscalation }}
          capabilities:
            add:
            - KILL
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 102
          runAsGroup: 1001
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: nginx-stream-conf
          mountPath: /etc/nginx/stream-conf.d
        - name: module-includes
          mountPath: /etc/nginx/module-includes
        - name: nginx-secrets
          mountPath: /etc/nginx/secrets
        - name: nginx-run
          mountPath: /var/run/nginx
        - name: nginx-includes
          mountPath: /etc/nginx/includes
        {{- with .Values.nginxGateway.extraVolumeMounts -}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      - image: {{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
        name: nginx
        {{- if .Values.nginx.lifecycle }}
        lifecycle:
        {{- toYaml .Values.nginx.lifecycle | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 101
          runAsGroup: 1001
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: nginx-stream-conf
          mountPath: /etc/nginx/stream-conf.d
        - name: module-includes
          mountPath: /etc/nginx/module-includes
        - name: nginx-secrets
          mountPath: /etc/nginx/secrets
        - name: nginx-run
          mountPath: /var/run/nginx
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-includes
          mountPath: /etc/nginx/includes
        {{- with .Values.nginx.extraVolumeMounts -}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.affinity }}
      affinity:
      {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nginx-gateway.serviceAccountName" . }}
      shareProcessNamespace: true
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      {{- if .Values.tolerations }}
      tolerations:
      {{- toYaml .Values.tolerations | nindent 6 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
      - name: nginx-conf
        emptyDir: {}
      - name: nginx-stream-conf
        emptyDir: {}
      - name: module-includes
        emptyDir: {}
      - name: nginx-secrets
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-includes
        emptyDir: {}
      {{- with .Values.extraVolumes -}}
      {{ toYaml . | nindent 6 }}
      {{- end }}
{{- end }}
