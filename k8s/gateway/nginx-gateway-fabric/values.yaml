nginxGateway:
  # -- The kind of the NGINX Gateway Fabric installation - currently, only deployment is supported.
  kind: deployment

  # -- The name of the GatewayClass that will be created as part of this release. Every NGINX Gateway
  # Fabric must have a unique corresponding GatewayClass resource. NGINX Gateway Fabric only processes resources that
  # belong to its class - i.e. have the "gatewayClassName" field resource equal to the class.
  gatewayClassName: nginx

  # -- Set of custom annotations for the NGINX Gateway Fabric pods.
  podAnnotations: {}

  # -- Set of custom annotations for GatewayClass objects.
  gatewayClassAnnotations: {}

  # -- The name of the Gateway controller. The controller name must be of the form: DOMAIN/PATH. The controller's domain
  # is gateway.nginx.org.
  gatewayControllerName: gateway.nginx.org/nginx-gateway-controller

  # The dynamic configuration for the control plane that is contained in the NginxGateway resource.
  config:
    logging:
      # -- Log level. Supported values "info", "debug", "error".
      level: info

  # -- Set of custom annotations for NginxGateway objects.
  configAnnotations: {}

  # -- The number of replicas of the NGINX Gateway Fabric Deployment.
  replicaCount: 1

  # The configuration for leader election.
  leaderElection:
    # -- Enable leader election. Leader election is used to avoid multiple replicas of the NGINX Gateway Fabric
    # reporting the status of the Gateway API resources. If not enabled, all replicas of NGINX Gateway Fabric
    # will update the statuses of the Gateway API resources.
    enable: true
    # -- The name of the leader election lock. A Lease object with this name will be created in the same Namespace as
    # the controller.
    # @default -- Autogenerated if not set or set to "".
    lockName: ""

  ## Defines the settings for the control plane readiness probe. This probe returns Ready when the controller
  ## has started and configured NGINX to serve traffic.
  readinessProbe:
    # -- Enable the /readyz endpoint on the control plane.
    enable: true
    # -- Port in which the readiness endpoint is exposed.
    port: 8081
    # -- The number of seconds after the Pod has started before the readiness probes are initiated.
    initialDelaySeconds: 3

  image:
    # -- The NGINX Gateway Fabric image to use
    repository: ghcr.io/nginxinc/nginx-gateway-fabric
    tag: 1.4.0
    pullPolicy: IfNotPresent

  securityContext:
    # -- Some environments may need this set to true in order for the control plane to successfully reload NGINX.
    allowPrivilegeEscalation: false

  productTelemetry:
    # -- Enable the collection of product telemetry.
    enable: true

  # -- The lifecycle of the nginx-gateway container.
  lifecycle: {}

  # -- The resource requests and/or limits of the nginx-gateway container.
  resources: {}

  # -- extraVolumeMounts are the additional volume mounts for the nginx-gateway container.
  extraVolumeMounts: []

  gwAPIExperimentalFeatures:
    # -- Enable the experimental features of Gateway API which are supported by NGINX Gateway Fabric. Requires the Gateway
    # APIs installed from the experimental channel.
    enable: false

nginx:
  image:
    # -- The NGINX image to use.
    repository: ghcr.io/nginxinc/nginx-gateway-fabric/nginx
    tag: 1.4.0
    pullPolicy: IfNotPresent

  # -- Is NGINX Plus image being used
  plus: false

  # -- The configuration for the data plane that is contained in the NginxProxy resource.
  config:
    {}
    # disableHTTP2: false
    # ipFamily: dual
    # telemetry:
    #   exporter:
    #     endpoint: otel-collector.default.svc:4317
    #     interval: 5s
    #     batchSize: 512
    #     batchCount: 4
    #   serviceName: ""
    #   spanAttributes: []

  # Configuration for NGINX Plus usage reporting.
  usage:
    # -- The namespace/name of the Secret containing the credentials for NGINX Plus usage reporting.
    secretName: ""
    # -- The base server URL of the NGINX Plus usage reporting server.
    serverURL: ""
    # -- The display name of the Kubernetes cluster in the NGINX Plus usage reporting server.
    clusterName: ""
    # -- Disable client verification of the NGINX Plus usage reporting server certificate.
    insecureSkipVerify: false

  # -- The lifecycle of the nginx container.
  lifecycle: {}

  # -- extraVolumeMounts are the additional volume mounts for the nginx container.
  extraVolumeMounts: []

# -- The termination grace period of the NGINX Gateway Fabric pod.
terminationGracePeriodSeconds: 30

# -- Tolerations for the NGINX Gateway Fabric pod.
tolerations: []

# -- The nodeSelector of the NGINX Gateway Fabric pod.
nodeSelector: {}

# -- The affinity of the NGINX Gateway Fabric pod.
affinity: {}

serviceAccount:
  annotations: {}
  # -- The name of the service account of the NGINX Gateway Fabric pods. Used for RBAC.
  # @default -- Autogenerated if not set or set to ""
  name: ""

  # -- The name of the secret containing docker registry credentials.
  # Secret must exist in the same namespace as the helm release.
  imagePullSecret: ""

  # -- A list of secret names containing docker registry credentials.
  # Secrets must exist in the same namespace as the helm release.
  imagePullSecrets: []

service:
  # -- Creates a service to expose the NGINX Gateway Fabric pods.
  create: true
  # -- The type of service to create for the NGINX Gateway Fabric.
  type: LoadBalancer
  # -- The externalTrafficPolicy of the service. The value Local preserves the client source IP.
  externalTrafficPolicy: Local
  # -- The annotations of the NGINX Gateway Fabric service.
  annotations: 
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${cert_arn}
    service.beta.kubernetes.io/aws-load-balancer-subnets: "${public_subnets}"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
#    service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS13-1-2-Ext1-2021-06"


  # -- A list of ports to expose through the NGINX Gateway Fabric service. Update it to match the listener ports from
  # your Gateway resource. Follows the conventional Kubernetes yaml syntax for service ports.
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
#    - port: 443
#      targetPort: 443
#      protocol: TCP
#      name: https

metrics:
  # -- Enable exposing metrics in the Prometheus format.
  enable: true
  # -- Set the port where the Prometheus metrics are exposed. Format: [1024 - 65535]
  port: 9113
  # -- Enable serving metrics via https. By default metrics are served via http.
  # Please note that this endpoint will be secured with a self-signed certificate.
  secure: false

# -- extraVolumes for the NGINX Gateway Fabric pod. Use in conjunction with
# nginxGateway.extraVolumeMounts and nginx.extraVolumeMounts to mount additional volumes to the containers.
extraVolumes: []
