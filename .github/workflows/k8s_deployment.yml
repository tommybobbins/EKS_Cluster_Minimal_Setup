name: k8s-deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The GitHub environment to use'
        required: true
        type: string
        default: "development"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

defaults:
  run:
    working-directory: k8s

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  # AWS_REGION: ${{ vars.AWS_REGION }}
  TF_VAR_state_bucket: ${{ vars.TF_VAR_STATE_BUCKET }}
  TF_VAR_aws_region: ${{ vars.AWS_REGION }}

jobs:
  k8s_deployment:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v3
    - uses: opentofu/setup-opentofu@v1.0.4
      # with:
      #   tofu_version: 1.6.0
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME}}
        role-session-name: eksrolesession
        aws-region:  ${{ vars.AWS_REGION }}

    - name: Update kube config
      id: update-kubeconfig
      run: aws eks --region eu-west-2 update-kubeconfig --name $(aws eks list-clusters --region=${{ vars.AWS_REGION }} --query 'clusters[]' --output text)
          
    - name: OpenTofu fmt
      id: fmt
      run: tofu fmt -check
      continue-on-error: true
  
    - name: OpenTofu Init
      id: init
      run: tofu init
    
    - name: OpenTofu Validate
      id: validate
      run: tofu validate -no-color
    
    - name: OpenTofu Plan
      id: plan
      run: tofu plan -out tfplan.out
      continue-on-error: false

    # - name: Check S3 List
    #   id: s3list
    #   run: aws s3 ls s3://${{ vars.TF_VAR_STATE_BUCKET }}/*
    #   continue-on-error: true

    - name: OpenTofu Apply
      id: apply
      run: tofu apply -auto-approve -no-color tfplan.out

    # - name: Check S3 List
    #   id: s3list2
    #   run: aws s3 ls s3://${{ vars.TF_VAR_STATE_BUCKET }}/*
    #   continue-on-error: true

    # - name: OpenTofu Destroy
    #   id: destroy
    #   run: tofu destroy -auto-approve

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "tofu\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### OpenTofu Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### OpenTofu Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### OpenTofu Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>
    
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
    
          </details>
    
          #### OpenTofu Plan üìñ\`${{ steps.plan.outcome }}\`
    
          <details><summary>Show Plan</summary>
    
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
    
          </details>
    
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })